# A generic, single database configuration.

[alembic]
# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false
# Example migration script in Alembic
def upgrade():
    # Add likes column as nullable
    op.add_column('reviews', sa.Column('likes', sa.Integer(), nullable=True))

    # Set default value for existing records
    op.execute("UPDATE reviews SET likes = 0 WHERE likes IS NULL")

    # Optionally alter column to be NOT NULL
    # op.alter_column('reviews', 'likes', nullable=False)

def downgrade():
    # Drop the likes column if needed
    op.drop_column('reviews', 'likes')


# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic,flask_migrate

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[logger_flask_migrate]
level = INFO
handlers =
qualname = flask_migrate

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
